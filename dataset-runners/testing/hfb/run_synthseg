#!/bin/bash

#===============================================================================
### REQUIREMENTS ###
#===============================================================================

# BLT_CONTAINER_DIR defined (synthseg.sif)
# apptainer (or singularity symlinked to apptainer)

#-------------------------------------------------------------------------------
### VARIABLES ###
#-------------------------------------------------------------------------------

### script variables ###
NUM_THREADS=1;

### data variables ###
BASE_DIR="${HOME}/tmp/test_datasets/dti/leducq"
IN_DIR="${BASE_DIR}/organized"
OUT_DIR="${BASE_DIR}/derivatives/synthseg"
T1_FN="T1.nii.gz"
FL_FN=""

#-------------------------------------------------------------------------------
### CONFIG ###
#-------------------------------------------------------------------------------

### standard variables ###
LIST_DIR=${OUT_DIR}/lists
LOG_DIR=${OUT_DIR}/logs
LIST_FN=${LIST_DIR}/subject_list.txt
SYNTHSEG_SIF="${BLT_CONTAINER_DIR}/synthseg.sif"

### checks and paths ###

if [[ -z "${MODULEPATH}" ]]; then
 echo "using apptainer/singularity on path"
else
  module --force purge
  module load StdEnv/2023
  module load apptainer/1.3.4
fi

for var in BLT_CONTAINER_DIR; do
  if [[ -z "${!var}" ]]; then
    echo "ERROR: $var not set"
    exit 1
  fi
done

if [[ ! -f ${SYNTHSEG_SIF} ]]; then
  echo "ERROR: ${SYNTHSEG_SIF} not found"
  exit 1
fi

#-------------------------------------------------------------------------------
### FUNCTIONS ###
#-------------------------------------------------------------------------------

function prep_dir
{
  echo "Preparing directories"

  mkdir -p ${LIST_DIR}
  mkdir -p ${OUT_DIR}

  rm -f ${LIST_FN}
  $(cd ${IN_DIR}; ls -d * | grep -Ev "lists" | grep -Ev "logs" > ${LIST_FN})
  while read -r line; do
    SUB_ID=$(echo ${line} | cut -d'/' -f1)
    mkdir -p ${OUT_DIR}/${SUB_ID}
  done < ${LIST_FN}  
}
 
function run_synthseg
{
  if [[ -f ${IN_DIR}/${SUB_ID}/${T1_FN} ]]; then  
    apptainer run --cleanenv --contain \
      --bind ${IN_DIR}:/input --bind ${OUT_DIR}:/output \
      --pwd / ${SYNTHSEG_SIF} \
      --i /input/${SUB_ID}/${T1_FN} \
      --o /output/${SUB_ID}/T1_synthseg.nii.gz \
      --threads ${NUM_THREADS} 
  fi

  if [[ -f ${IN_DIR}/${SUB_ID}/${FL_FN} ]]; then  
    apptainer run --cleanenv --contain \
      --bind ${IN_DIR}:/input --bind ${OUT_DIR}:/output \
      --pwd / ${SYNTHSEG_SIF} \
      --i /input/${SUB_ID}/${FL_FN} \
      --o /output/${SUB_ID}/FLAIR_synthseg.nii.gz \
      --threads ${NUM_THREADS}
  fi
}


#-------------------------------------------------------------------------------
### PROCESSING ###
#-------------------------------------------------------------------------------

if [[ $# -eq 0 ]]; then
  prep_dir
elif [[ $# -eq 1 ]]; then

  ### get subject ID from the list ###
  IDX=$1
  SUB_ID=$(cat ${LIST_FN} | head -n ${IDX} | tail -n 1)
  
  ### run container for subject ID ###
  run_synthseg

fi

#-------------------------------------------------------------------------------
