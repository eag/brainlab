#!/bin/bash

#===============================================================================
### REQUIREMENTS ###
#===============================================================================

# BLT_CONTAINER_DIR defined (synthseg.sif)
# apptainer (or singularity symlinked to apptainer)

#-------------------------------------------------------------------------------
### VARIABLES ###
#-------------------------------------------------------------------------------

### script variables ###
NUM_THREADS=1;

### data variables ###
BASE_DIR="${HOME}/tmp/test_datasets/dti/leducq"
IN_DIR="${BASE_DIR}/organized"
OUT_DIR="${BASE_DIR}/derivatives/synthseg"
T1_FN="T1.nii.gz"
FL_FN=""

#-------------------------------------------------------------------------------
### CONFIG ###
#-------------------------------------------------------------------------------

### standard variables ###
LIST_DIR=${OUT_DIR}/lists
LOG_DIR=${OUT_DIR}/logs
LIST_FN=${LIST_DIR}/subject_list.txt
SYNTHSEG_SIF="${BLT_CONTAINER_DIR}/synthseg.sif"

### checks and paths ###

if [[ $# -ne 1 ]]; then
  echo "USAGE ERROR"
  exit 1
fi

if [[ -z "${MODULEPATH}" ]]; then
 echo "using apptainer/singularity on path"
else
  module --force purge
  module load StdEnv/2023
  module load apptainer/1.3.4
fi

for var in BLT_CONTAINER_DIR; do
  if [[ -z "${!var}" ]]; then
    echo "ERROR: $var not set"
    exit 1
  fi
done

if [[ ! -f ${SYNTHSEG_SIF} ]]; then
  echo "ERROR: ${SYNTHSEG_SIF} not found"
  exit 1
fi


#-------------------------------------------------------------------------------
### FUNCTIONS ###
#-------------------------------------------------------------------------------

function prep_dir
{
  echo "Preparing directories"

  mkdir -p ${LIST_DIR}
  mkdir -p ${OUT_DIR}

  rm -f ${LIST_FN}
  $(cd ${IN_DIR}; ls -d * | grep -Ev "lists" | grep -Ev "logs" > ${LIST_FN})
  while read -r line; do
    SUB_ID=$(echo ${line} | cut -d'/' -f1)
    mkdir -p ${OUT_DIR}/${SUB_ID}
  done < ${LIST_FN}  
}
 
function run_synthseg
{
  local modality=$1
  local input_fn=$2
  local output_fn=$3

  if [[ -f "${IN_DIR}/${SUB_ID}/${input_fn}" ]]; then  
    apptainer run --cleanenv --contain \
      --bind "${IN_DIR}:/input" --bind "${OUT_DIR}:/output" \
      --pwd / "${SYNTHSEG_SIF}" \
      --i "/input/${SUB_ID}/${input_fn}" \
      --o "/output/${SUB_ID}/${output_fn}" \
      --threads "${NUM_THREADS}"
  fi
}


#-------------------------------------------------------------------------------
### PROCESSING ###
#-------------------------------------------------------------------------------


IDX=$1
if [[ ${IDX} -eq 0 ]]; then
  prep_dir
else
  SUB_ID=$(cat ${LIST_FN} | head -n ${IDX} | tail -n 1)
  
  run_synthseg "T1" "$T1_FN" "T1_synthseg.nii.gz"
  run_synthseg "FLAIR" "$FL_FN" "FLAIR_synthseg.nii.gz"
fi

#-------------------------------------------------------------------------------
