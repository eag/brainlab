#!/bin/bash

#-------------------------------------------------------------------------------
### REQUIREMENTS ###
#-------------------------------------------------------------------------------

# BRAINLAB_DIR, BLT_CONTAINER_DIR defined
# apptainer/singularity
# FSL (fslcpgeom)

#-------------------------------------------------------------------------------
### SETUP ###
#-------------------------------------------------------------------------------

### data variables ###
root_dir="${HOME}/tmp/test_datasets/dti/adni"
in_dir=${root_dir}/organized
out_dir=${root_dir}/derivatives/icvmapper
tmp_root=${HOME}/tmp
t1_fn=T1.nii.gz

#-------------------------------------------------------------------------------
### CONFIG ###
#-------------------------------------------------------------------------------

### standard variables ###
list_dir=${out_dir}/lists
log_dir=${out_dir}/logs
list_fn=${list_dir}/subject_list.txt
icvmapper_sif="${BLT_CONTAINER_DIR}/icvmapper.sif"

### use apptainer, or singularity if apptainer is not available ###
if command -v apptainer &> /dev/null; then
  container_tool=apptainer
elif command -v singularity &> /dev/null; then
  container_tool=singularity
else
  echo "ERROR: neither apptainer nor singularity found in PATH."
  exit 1
fi

### ensure BRAINLAB_DIR, BLT_CONTAINER_DIR defined ###
if [[ -z "${BRAINLAB_DIR}" ]]; then
  echo "ERROR: BRAINLAB_DIR not set"
  exit 1
elif [[ -z "${BLT_CONTAINER_DIR}" ]]; then
  echo "ERROR: BLT_CONTAINER_DIR not set"
  exit 1
fi

### path to repo tools ###
export PATH=${PATH}:${BRAINLAB_DIR}/wrapper-scripts/bash/core

### ensure icvmapper.sif exists ###
if [[ ! -f ${icvmapper_sif} ]]; then
  echo "ERROR: ${icvmapper_sif} not found"
  exit 1
fi

### path to required software ###
if [[ -z "${MODULEPATH}" ]]; then
  echo "using FSL on path"
else
  module load fsl/6.0.4
fi

#-------------------------------------------------------------------------------
### FUNCTIONS ###
#-------------------------------------------------------------------------------

function prep_dir
{
  echo "Preparing directories..."
  
  mkdir -p ${list_dir}
  mkdir -p ${out_dir}

  rm -f ${list_fn}
  $(cd ${in_dir}; ls -d * | grep -Ev "lists" | grep -Ev "logs" > ${list_fn})
  while read -r line; do
    sub_id=$(echo ${line} | cut -d'/' -f1)
    mkdir -p ${out_dir}/${sub_id}
  done < ${list_fn}
}
 
function icvmapper_t1
{
  bltIcvmapper \
    ${out_dir}/${sub_id} \
    ${in_dir}/${sub_id}/${t1_fn} \
    -b --thr 0.4
}

#-------------------------------------------------------------------------------
### PROCESSING ###
#-------------------------------------------------------------------------------

if [[ $# -eq 0 ]]; then
  prep_dir
elif [[ $# -eq 1 ]]; then
  ### get subject ID from the list ###
  idx=$1
  sub_id=$(cat ${list_fn} | head -n ${idx} | tail -n 1)
  
  ### run container for subject ID ###
  icvmapper_t1
fi

#-------------------------------------------------------------------------------



