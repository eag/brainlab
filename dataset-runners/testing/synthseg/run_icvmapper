#!/bin/bash

#-------------------------------------------------------------------------------
### REQUIREMENTS ###
#-------------------------------------------------------------------------------

# FSL (fslcpgeom)

#-------------------------------------------------------------------------------
### SETUP ###
#-------------------------------------------------------------------------------

### script variables ###
brainlab_dir="${HOME}/work/code/brainlab"
icvmapper_sif="${HOME}/work/containers/lab/icvmapper.sif"
num_threads=1;

### data variables ###
root_dir="${HOME}/tmp/test_datasets/dti/adni"
in_dir=${root_dir}/organized
out_dir=${root_dir}/derivatives/standard
tmp_root=${HOME}/tmp
t1_fn=T1.nii.gz

#-------------------------------------------------------------------------------
### CONFIG ###
#-------------------------------------------------------------------------------

### standard variables ###
list_dir=${out_dir}/lists
log_dir=${out_dir}/logs
list_fn=${list_dir}/subject_list.txt

### path to repo tools ###
export PATH=${PATH}:${brainlab_dir}/core-tools/bash

### path to required software ###
if [[ -z "${MODULEPATH}" ]]; then
  echo "using FSL on path"
else
  module load fsl/6.0.4
fi

#-------------------------------------------------------------------------------
### FUNCTIONS ###
#-------------------------------------------------------------------------------

function prep_dir
{
  echo "Preparing directories..."
  
  mkdir -p ${list_dir}
  mkdir -p ${out_dir}

  rm -f ${list_fn}
  $(cd ${in_dir}; ls -d * | grep -Ev "lists" | grep -Ev "logs" > ${list_fn})
  while read -r line; do
    sub_id=$(echo ${line} | cut -d'/' -f1)
    mkdir -p ${out_dir}/${sub_id}
  done < ${list_fn}
  
  num_subs=$(cat ${list_fn} | wc -l)
  touch ${list_dir}/subject_list_n${num_subs}.txt
}
 

function icvmapper_t1
{
  tmp_dir=$(bltCreateTmpDir ${tmp_root} icv_${sub_id})

  mkdir ${tmp_dir}/${sub_id}
  cp ${in_dir}/${sub_id}/${t1_fn} ${tmp_dir}/${sub_id}/
  t1=${tmp_dir}/${sub_id}/T1.nii.gz

  ${container_tool} exec \
	  -B ${HOME} -B ${tmp_root} \
  	${icvmapper_sif} icvmapper seg_icv \
  	-t1 ${t1} \
  	-o ${tmp_dir}/icvHfB.nii.gz \
  	-b --thr 0.4
  
  #	--ign_ort -b --thr 0.4
  	
  mkdir -p ${out_dir}/${sub_id}
  
  cp ${tmp_dir}/icvHfB.nii.gz ${out_dir}/${sub_id}/
  
  cp $(find ${tmp_dir} -name "*pred_prob.nii.gz") \
    ${out_dir}/${sub_id}/icvHfB_prob.nii.gz
    
  fslcpgeom ${t1} ${out_dir}/${sub_id}/icvHfB_prob.nii.gz
	fslcpgeom ${t1} ${out_dir}/${sub_id}/icvHfB.nii.gz  
  
  rm -rf ${tmp_dir}
}

#-------------------------------------------------------------------------------
### PROCESSING ###
#-------------------------------------------------------------------------------

if [[ $# -eq 0 ]]; then
  echo "icvmapper_sif: $(ls ${icvmapper_sif})"
  bltCreateTmpDir
  prep_dir
elif [[ $# -eq 1 ]]; then

  ### get subject ID from the list ###
  idx=$1
  sub_id=$(cat ${list_fn} | head -n ${idx} | tail -n 1)
  
  ### use apptainer, or singularity if apptainer is not available ###
  if command -v apptainer &> /dev/null; then
    container_tool=apptainer
  elif command -v singularity &> /dev/null; then
    container_tool=singularity
  else
    echo "ERROR: neither apptainer nor singularity found in PATH."
    exit 1
  fi

  ### run container for subject ID ###
  icvmapper_t1

fi

#-------------------------------------------------------------------------------



