#!/bin/bash
#================================================================================
### REQUIREMENTS ###
#================================================================================

# apptainer (or singularity symlinked to apptainer)
# BLT_CONTAINER_DIR defined (synthseg.sif)
 
#-------------------------------------------------------------------------------
### FUNCTIONS ###
#-------------------------------------------------------------------------------

function usage()
{
  echo ""
  echo "Usage:"
  echo "  $(basename $0) <input_fn> <output_fn> <num_threads> [options]"
  echo ""
}

function setup_environment()
{
  if [[ $# -lt 3 ]]; then
    usage
    exit 1
  fi

  INPUT_FN=$1
  OUTPUT_FN=$2
  NUM_THREADS=$3;
  OPTIONS=("${@:4}")

  if [[ -z "${MODULEPATH}" ]]; then
    echo "using apptainer/singularity on path"
  else
    module --force purge
    module load StdEnv/2023
    module load apptainer/1.3.4
  fi

  for var in BLT_CONTAINER_DIR; do
    if [[ -z "${!var}" ]]; then
      echo "ERROR: $var not set"
      exit 1
    fi
  done

  SYNTHSEG_SIF="${BLT_CONTAINER_DIR}/synthseg.sif"
  if [[ ! -f ${SYNTHSEG_SIF} ]]; then
    echo "ERROR: ${SYNTHSEG_SIF} not found"
    exit 1
  fi

}

function run_synthseg()
{
  local abs_input=$(realpath "${INPUT_FN}")
  local abs_output=$(realpath -m "${OUTPUT_FN}") 
  local in_dir=$(dirname "${abs_input}")
  local out_dir=$(dirname "${abs_output}")
  local in_file=$(basename "${abs_input}")
  local out_file=$(basename "${abs_output}")

  if [[ ! -f "${abs_input}" ]]; then
    echo "ERROR: input file '${abs_input}' not found"
    exit 1
  fi

  if [[ ! -d "${out_dir}" ]]; then
    echo "ERROR: output directory '${out_dir}' not found"
    exit 1
  fi

  apptainer run --cleanenv --contain \
    --bind "${in_dir}:/input" --bind "${out_dir}:/output" \
    --pwd / "${SYNTHSEG_SIF}" \
    --i /input/${in_file} \
    --o /output/${out_file} \
    --threads "${NUM_THREADS}"\
    "${OPTIONS[@]}"
}

#-------------------------------------------------------------------------------
### PROCESSING ###
#-------------------------------------------------------------------------------

setup_environment "$@"
run_synthseg

#-------------------------------------------------------------------------------
