#!/bin/bash
set -euo pipefail

#-------------------------------------------------------------------------------
### USAGE ###
#-------------------------------------------------------------------------------

### ###

#-------------------------------------------------------------------------------
### VARIABLES ###
#-------------------------------------------------------------------------------

SUB_ID=002_S_0413
IN_DIR=${HOME}/tmp/test_datasets/dti/adni/organized/
OUT_DIR=${HOME}/tmp/test_datasets/dti/adni/derivatives/dti

#-------------------------------------------------------------------------------
### CONFIG ###
#-------------------------------------------------------------------------------


### Default values (fallbacks if no JSON) ###
DEFAULT_PE_DIR="j"
DEFAULT_READOUT=0.0495301
THREADS=6

mkdir -p ${OUT_DIR}/logs


log() {
  echo "[`date '+%F %T'`] $*" | tee -a "${OUT_DIR}/logs/preproc_${SUB_ID}.log"
}

log "Starting DTI pipeline for ${SUB_ID}"


DWI_AP=${IN_DIR}/${SUB_ID}/DTI_AP.nii.gz
BVAL=${IN_DIR}/${SUB_ID}/DTI_AP.bval
BVEC=${IN_DIR}/${SUB_ID}/DTI_AP.bvec
JSON_AP=${IN_DIR}/${SUB_ID}/DTI_AP.json
DWI_PA=${IN_DIR}/${SUB_ID}/DTI_PA.nii.gz
JSON_PA=${IN_DIR}/${SUB_ID}/DTI_PA.json

HAS_PA=false
[[ -f "$DWI_PA" && -s "$DWI_PA" ]] && HAS_PA=true

if [[ -f "$JSON_AP" ]]; then
  PE_DIR=$(jq -r '.PhaseEncodingDirection // empty' "$JSON_AP")
  READOUT=$(jq -r '.TotalReadoutTime // empty' "$JSON_AP")
  [[ -z "$PE_DIR" ]] && PE_DIR=${DEFAULT_PE_DIR}
  [[ -z "$READOUT" ]] && READOUT=${DEFAULT_READOUT}
else
  log "No JSON found â€“ using default PE direction and readout time"
  PE_DIR=${DEFAULT_PE_DIR}
  READOUT=${DEFAULT_READOUT}
fi

log "Using PE direction: $PE_DIR"
log "Using Readout Time: $READOUT"

# ---------------------- DENOISE AND DEGIBBS ----------------------------------
mrconvert "$DWI_AP" "${OUT_DIR}/dwi.mif" -fslgrad "$BVEC" "$BVAL" -force

dwidenoise "${OUT_DIR}/dwi.mif" "${OUT_DIR}/dwi_denoise.mif" -nthreads $THREADS -force
mrdegibbs "${OUT_DIR}/dwi_denoise.mif" "${OUT_DIR}/dwi_degibbs.mif" -nthreads $THREADS -force

# Convert back to NIfTI for dwifslpreproc
mrconvert "${OUT_DIR}/dwi_degibbs.mif" "${OUT_DIR}/dwi_degibbs.nii.gz" \
  -export_grad_fsl "${OUT_DIR}/dwi_degibbs.bvec" "${OUT_DIR}/dwi_degibbs.bval" -force

# ---------------------- PREPARE SE-EPI FOR TOPUP -----------------------------
if $HAS_PA; then
  log "Extracting b0s for AP and PA"
  dwidenoise "$DWI_PA" "${OUT_DIR}/dwi_pa_denoise.nii.gz" -force -nthreads $THREADS
  mrdegibbs "${OUT_DIR}/dwi_pa_denoise.nii.gz" "${OUT_DIR}/dwi_pa_degibbs.nii.gz" -force -nthreads $THREADS

  dwiextract "${OUT_DIR}/dwi_degibbs.mif" - -bzero | mrmath - mean "${OUT_DIR}/b0_ap.nii.gz" -axis 3 -force
  dwiextract "${OUT_DIR}/dwi_pa_degibbs.nii.gz" - -bzero | mrmath - mean "${OUT_DIR}/b0_pa.nii.gz" -axis 3 -force

  fslmerge -t "${OUT_DIR}/b0_pair.nii.gz" "${OUT_DIR}/b0_ap.nii.gz" "${OUT_DIR}/b0_pa.nii.gz"
fi

# ---------------------- DISTORTION CORRECTION --------------------------------
log "Running dwifslpreproc (eddy + topup if PA exists)"

dwifslpreproc "${OUT_DIR}/dwi_degibbs.nii.gz" "${OUT_DIR}/dwi_preproc.nii.gz" \
  -rpe_${HAS_PA:+pair}${HAS_PA:+" 
